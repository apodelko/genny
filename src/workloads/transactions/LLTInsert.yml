SchemaVersion: 2018-07-01
Owner: "@mongodb/product-perf"
Description: |
  Workload to Benchmark the effect of LongLivedTransactions on a Mixed workload.

GlobalDefaults:
  # Start: The following block gets updated for the other configurations.
  # In-memory: Database size works out about 12GB.
  InitialDocumentCount: &InitialNumDocs 10000000
  SecondaryDocumentCount: &SecondaryNumDocs 10000000
  GlobalRateValue: &GlobalRateValue 1 per 1250 microsecond
  ThreadsValue: &ThreadsValue 16
  # End: The previous block gets updated for the other configurations.

  # These values should match those are the top of LLTPhases.yml
  dbname: &dbname llt
  MaxPhases: &MaxPhases 20

  # The Sample Document Shape.
  Document: &Doc
    ts: {^Now: {}}
    caid: {^RandomInt: {min: 0, max: 1000}}
    cuid: {^RandomInt: {min: 0, max: 100000}}
    prod: {^RandomInt: {min: 0, max: 10000}}
    price: {^RandomDouble: {min: 0.0, max: 1000.0}}
    data: {^Join: {array: ["aaaaaaaaaa", {^FastRandomString: {length: {^RandomInt: {min: 0, max: 10}}}}]}}

  LLTIndexes: &LLTIndexes
  - keys: {price: 1, ts: 1, cuid: 1}     # Ptc
  - keys: {price: 1, cuid: 1}            # Pc
  - keys: {caid: 1, price: 1, cuid: 1}   # Cpc

  # Loader Config.
  LoadThreads: &LoadThreads 4
  LoadBatchSize: &LoadBatchSize 1000

  CollectionCount: &CollectionCount 4

  # The write concern. The intent is to use what is chosen as the default in 5.0.
  # The query operation name indicates the index in use (see LLTIndexes) :
  #  * Ptc => price_1_ts_1_cuid_1
  #  * Pc  => price_1_cuid_1
  #  * Cpc => caid_1_price_1_cuid_1


  # Create
  InsertOperation: &InsertOperation
    OperationName: insertOne
    OperationCommand:
      Document: *Doc
      OperationOptions:
        WriteConcern:
          Level: majority

  # Read
  PtcQueryOperation: &PtcQueryOperation
    OperationName: findOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 500.0 }}}}
      Options:
        Hint: price_1_ts_1_cuid_1
        Comment: PtcQueryOperation

  PcQueryOperation: &PcQueryOperation
    OperationName: findOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 500.0 }}}}
      Options:
        Hint: price_1_cuid_1
        Comment: PcQueryOperation

  CpcQueryOperation: &CpcQueryOperation
    OperationName: findOne
    OperationCommand:
      Filter: {caid: {$gte: {^RandomInt: { min: 0, max: 1000 }}}}
      Options:
        Hint: caid_1_price_1_cuid_1
        Comment: CpcQueryOperation

  # Update
  PtcUpdateOperation: &PtcUpdateOperation
    OperationName: updateOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 500.0 }}}}
      Update:
        $set:
          ts: {^Now: {}}
          data: {^Join: {array: ["bbbbbbbbbb", {^FastRandomString: {length: {^RandomInt: {min: 0, max: 10}}}}]}}
      OperationOptions:
        Upsert: false
        WriteConcern:
          Level: majority
        Hint: price_1_ts_1_cuid_1

  PcUpdateOperation: &PcUpdateOperation
    OperationName: updateOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 500.0 }}}}
      Update:
        $set:
          ts: {^Now: {}}
          prod: {^RandomInt: {min: 0, max: 10000}}
      OperationOptions:
        Upsert: false
        WriteConcern:
          Level: majority
        Hint: price_1_cuid_1

  CpcUpdateOperation: &CpcUpdateOperation
    OperationName: updateOne
    OperationCommand:
      Filter: {caid: {$gte: {^RandomInt: { min: 0, max: 1000 }}}}
      Update:
        $set:
          ts: {^Now: {}}
          cuid: {^RandomInt: {min: 0, max: 100000}}
      OperationOptions:
        Upsert: false
        WriteConcern:
          Level: majority
        Hint: caid_1_price_1_cuid_1

  # Delete
  PtcRemoveOperation: &PtcRemoveOperation
    OperationName: deleteOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 1000.0 }}}}
      OperationOptions:
        Comment: PtcRemoveOperation
        WriteConcern:
          Level: majority

  PcRemoveOperation: &PcRemoveOperation
    OperationName: deleteOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 1000.0 }}}}
      OperationOptions:
        WriteConcern:
          Level: majority

  CpcRemoveOperation: &CpcRemoveOperation
    OperationName: deleteOne
    OperationCommand:
      Filter: {caid: {$gte: {^RandomInt: { min: 0, max: 1000 }}}}
      OperationOptions:
        WriteConcern:
          Level: majority

  # Scanner
  SnapshotScannerShortDuration: &SnapshotScannerShortDuration 1 minutes
  SnapshotScannerMediumDuration: &SnapshotScannerMediumDuration 10 minutes
  SnapshotScannerLongDuration: &SnapshotScannerLongDuration 60 minutes

ActorTemplates:
- TemplateName: InsertTemplate
  Config:
    Name: {^Parameter: {Name: "Name", Default: "Short.Insert.Baseline"}}
    Type: CrudActor
    Threads: *ThreadsValue
    Phases:
      OnlyActiveInPhases:
        Active: {^Parameter: {Name: "Active", Default: [5]}}
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          GlobalRate: *GlobalRateValue
          Threads: *ThreadsValue
          CollectionCount: *CollectionCount
          Database: *dbname
          Duration: {^Parameter: {Name: "Duration", Default: *SnapshotScannerShortDuration}}  # *SnapshotScannerShortDuration
          Blocking: {^Parameter: {Name: "Blocking", Default: true}}
          Operations:
          # Create
          - *InsertOperation
          - *InsertOperation
          - *InsertOperation
          - *InsertOperation
          - *InsertOperation
          - *InsertOperation


Clients:
  Default:
    QueryOptions:
      socketTimeoutMS: -1
      maxPoolSize: 2000

# Odd phases do operations, even phases quiesce.
Actors:
# Ensure that transactionLifetimeLimitSeconds supports all the possible ScanDurations.
# i.e. greater than SnapshotScannerLongDuration.
- Name: SetTransactionLifetimeLimit
  Type: AdminCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Operation:
          OperationName: RunCommand
          OperationCommand:
            setParameter: 1
            transactionLifetimeLimitSeconds: 14400  # 4 Hours

- Name: InitialLoad
  Type: Loader
  Threads: *LoadThreads
  Phases:
    OnlyActiveInPhases:
      Active: [1]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Threads: *LoadThreads
        CollectionCount: *CollectionCount
        Database: *dbname
        Repeat: 1
        Document: *Doc
        DocumentCount: *InitialNumDocs
        Indexes: *LLTIndexes
        BatchSize: *LoadBatchSize

- Name: SecondLoadAfterIndexes
  Type: Loader
  Threads: *LoadThreads
  Phases:
    OnlyActiveInPhases:
      Active: [3]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Threads: *LoadThreads
        CollectionCount: *CollectionCount
        Database: *dbname
        Repeat: 1
        Document: *Doc
        DocumentCount: *SecondaryNumDocs
        BatchSize: *LoadBatchSize

- Name: QuiescePhase
  Type: QuiesceActor
  Threads: 1
  Database: *dbname
  Phases:
    OnlyActiveInPhases:
      Active: [0, 2, 4]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1

# Guard Against timeout for no output.
- Name: LoggingActor
  Type: LoggingActor
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [1, 3, 5]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        LogEvery: 15 minutes
        Blocking: None

# Naming Conventions:
# Operation.Duration.Load_level.Operation.Type_of_test
# Operation:     Insert|Query|Update|Remove|Mixed
# Duration:      Short|Medium|Long
# Type of test:  Baseline|Benchmark
#
# Baseline without scans, benchmark with scans

- ActorFromTemplate:
    TemplateName: InsertTemplate
    TemplateParameters:
      Name: Medium.Insert.Baseline
      Active: [5]
      Duration: *SnapshotScannerMediumDuration


AutoRun:
- When:
    mongodb_setup:
      $eq:
      - atlas-like-replica
      - replica
      - replica-all-feature-flags
      - single-replica
    branch_name:
      $neq:
      - v4.0
      - v4.2
